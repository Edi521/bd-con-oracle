--- LENGUAJE PL/SQL ES UN LENGUAJE DE PROGRAMACION INCLUIDO EN ORACLE, CON EL VAMOS A PODER CREAR PROCEDIMEINTOS,TRIGGERS,FUNCIONES, PAQUETES, BLOQUES Y MAS
--BLOQUES PL/SQL ---------> SE UTILIZA PARA EJECUTAR SENTENCIAS SQL Y ESTRUCTURAS DE CONTRO, TAMBIEN SE PUEDEN MANEJAR EXCEPCIONES
--DECLARAR VARIABLES, LLAMADA A OTROS BLOQUES COMO PROCEDIMIENTOS Y FUNCIONES Y CUALQUIER OTRA LOGICA DE PROGRAMACION NECESARIA

/*
SINTAXIS:
    DECLARE ----> DECLARAR CONSTANTES, VARIABLES Y CURSORES (OPCIONAL)
        BEGIN ----> PARA INICIALIZAR LA PARTE DEL CODIGO A EJECUTAR
          -----> INTRUCCIONES A EJECUTAR
          EXCEPTION ------> MANEJO DE EXCEPCIONES(OPCIONAL)
        END; -----------------> FIN DEL BLOQUE
        / --------------------> INDICARLE AL SISTEMA EL TERMINO DEL BLOQUE A LA HORA DE EJECUTAR
        
*/

--BLOQUE PL/SQL O BLOQUE ANONIMO
DECLARE
BEGIN
    DBMS_OUTPUT.PUT_LINE('HOLA DESDE BLOQUE ANONIMO PL/SQL');
END;
/

--------CICLOS
--LOOP
DECLARE
LV_VARIABLE NUMBER := 0;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE('VALOR DE LA VARIABLE' || LV_VARIABLE);
        --EXIT WHEN LV_VARIABLE = 11;
        LV_VARIABLE := LV_VARIABLE +1;
        IF LV_VARIABLE = 11 THEN
            EXIT;
        END IF;
    END LOOP;
END;
/


--USO DEL CICLO FOR Y LOOP
DECLARE
BEGIN
    FOR i IN 1..10
    LOOP
        DBMS_OUTPUT.PUT_LINE('CALOR DE LA VARIABLE i: '||i);
    END LOOP;
END;
/

--USO DEL CICLO WHILE CON LOOP
DECLARE
LV_ITERADOR NUMBER := 1;
BEGIN
    WHILE LV_ITERADOR <= 6
    LOOP
        DBMS_OUTPUT.PUT_LINE('VALOR DE ITERADOR: '||LV_ITERADOR);
        LV_ITERADOR := LV_ITERADOR +1;
    END LOOP;
END;
/

--USO DE BOOLEANOS
DECLARE 
LV_VALIDADOR BOOLEAN := FALSE;
BEGIN
    FOR i IN 1..20
    LOOP
        DBMS_OUTPUT.PUT_LINE('VALOR DEL ITERADOR i' || i);
        
        IF i = 9 THEN
            LV_VALIDADOR := TRUE;
        END IF;
        
        EXIT WHEN LV_VALIDADOR;
    END LOOP;
END;
/